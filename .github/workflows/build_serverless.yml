name: build_serverless

on:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  check-formatting:
    defaults:
      run:
        working-directory: serverless
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Check formatting
        run: yarn check-formatting

  cloudformation-linter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run cfn-lint
        uses: scottbrenner/cfn-lint-action@master
        with:
          args: "./serverless/template.yml"

  check-typescript-build:
    defaults:
      run:
        working-directory: serverless
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

  test:
    defaults:
      run:
        working-directory: serverless
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

      - name: Upload code coverage report
        run: bash <(curl -s https://codecov.io/bash)
