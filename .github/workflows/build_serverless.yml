name: build_serverless

on: push

jobs:
  check-formatting:
    defaults:
      run:
        working-directory: serverless
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Cache Node modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Check formatting
    - run: npm run check-formatting

  cloudformation-linter:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Run cfn-lint
      uses: scottbrenner/cfn-lint-action@master
      with:
        args: "./serverless/template.yml"

  check-typescript-build:
    defaults:
      run:
        working-directory: serverless
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Cache Node modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

  test:
    defaults:
      run:
        working-directory: serverless
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Upload code coverage report
      run: bash <(curl -s https://codecov.io/bash)
